package com.lmnoppy.api.covid.model.enums;

import lombok.Getter;

import java.util.Collections;
import java.util.List;

import static com.lmnoppy.api.covid.model.enums.Metrics.*;
import static com.lmnoppy.api.covid.model.enums.Nation.NationConstants.UK_NATIONS_SUPPORTED_METRICS;

/**
 * Currently only UK Nations supported, in future id like to add other european countries.
 */

@Getter
public enum Nation {

    SCOTLAND("Scotland", UK_NATIONS_SUPPORTED_METRICS),
    WALES("Wales", UK_NATIONS_SUPPORTED_METRICS),
    NORTHERN_IRELAND("Northern Ireland", UK_NATIONS_SUPPORTED_METRICS),
    ENGLAND("England", UK_NATIONS_SUPPORTED_METRICS),
    GERMANY("Germany", Collections.emptyList()),
    FRANCE("France", Collections.emptyList());

    private final String name;
    private final List<Metrics> supportedMetrics;
    Nation(final String name, final List<Metrics> supportedMetrics){
        this.name = name;
        this.supportedMetrics = supportedMetrics;
    }

    //Error: illegal forward reference fix
    static class NationConstants {
        static final List<Metrics> UK_NATIONS_SUPPORTED_METRICS = List.of(CUM_ADMISSIONS, COVID_OCCUPIED_MV_BEDS, CUM_ADMISSIONS_BY_AGE, CUM_CASES_BY_PUBLISH_DATE, CUM_CASES_BY_PUBLISH_DATE_RATE, CUM_CASES_LFD_CONFIRMED_PCR_BY_SPECIMEN_DATE,
                CUM_CASES_LFD_ONLY_BY_SPECIMEN_DATE, CUM_CASES_PCR_ONLY_BY_SPECIMEN_DATE, CUM_DAILY_NSO_DEATHS_BY_DEATH_DATE, CUM_DEATHS_28DAYS_BY_DEATH_DATE,
                CUM_DEATHS_28DAYS_BY_DEATH_DATE_RATE, CUM_DEATHS_28DAYS_BY_PUBLISH_DATE_RATE, CUM_DEATHS60_DAYS_BY_DEATH_DATE, CUM_DEATHS_60DAYS_BY_DEATH_DATE_RATE,
                CUM_DEATHS_60DAYS_BY_DEATH_DATE_RATE, CUM_DEATHS_60DAYS_BY_PUBLISH_DATE, CUM_DEATHS_60DAYS_BY_PUBLISH_DATE_RATE, CUM_FIRST_EPISODES_BY_SPECIMEN_DATE,
                CUM_FIRST_EPISODES_BY_SPECIMEN_DATE_RATE, CUM_FIRST_EPISODES_BY_SPECIMEN_DATE_RATE, CUM_LFD_TESTS_BY_SPECIMEN_DATE, CUM_ONS_DEATHS_BY_REGISTRATION_DATE,
                CUM_ONS_DEATHS_BY_REGISTRATION_DATE_RATE, CUM_PCR_TESTS_BY_PUBLISH_DATE, CUM_PCR_TESTS_BY_SPECIMEN_DATE, CUM_PEOPLE_VACCINATED_BOOSTER_DOSE_BY_PUBLISH_DATE,
                CUM_PEOPLE_VACCINATED_FIRST_DOSE_BY_PUBLISH_DATE, CUM_PEOPLE_VACCINATED_FIRST_DOSE_BY_VACCINATION_DATE, CUM_PEOPLE_VACCINATED_SECOND_DOSE_BY_PUBLISH_DATE,
                CUM_PEOPLE_VACCINATED_SECOND_DOSE_BY_VACCINATION_DATE, CUM_PEOPLE_VACCINATED_THIRD_DOSE_BY_PUBLISH_DATE, CUM_PEOPLE_VACCINATED_THIRD_INJECTION_BY_PUBLISH_DATE,
                CUM_PEOPLE_VACCINATED_THIRD_INJECTION_BY_VACCINATION_DATE, CUM_PILLAR_FOUR_TESTS_BY_PUBLISH_DATE, CUM_PILLAR_ONE_TESTS_BY_PUBLISH_DATE, CUM_PILLAR_ONE_TWO_TESTS_BY_PUBLISH_DATE,
                CUM_PILLAR_THREE_TESTS_BY_PUBLISH_DATE, CUM_PILLAR_TWO_TESTS_BY_PUBLISH_DATE, CUM_REINFECTIONS_BY_SPECIMEN_DATE, CUM_REINFECTIONS_BY_SPECIMEN_DATE_RATE,
                CUM_TESTS_BY_PUBLISH_DATE, CUM_VACCINATION_BOOSTER_DOSE_UPTAKE_BY_PUBLISH_DATE_PERCENTAGE, CUM_VACCINATION_FIRST_DOSE_UPTAKE_BY_PUBLISH_DATE_PERCENTAGE,
                CUM_VACCINATION_FIRST_DOSE_UPTAKE_BY_VACCINATION_DATE_PERCENTAGE, CUM_VACCINATION_SECOND_DOSE_UP_TAKE_BY_PUBLISH_DATE_PERCENTAGE, CUM_VACCINATION_SECOND_DOSE_UPTAKE_BY_VACCINATION_DATE_PERCENTAGE,
                CUM_VACCINATION_THIRD_INJECTION_UPTAKE_BY_PUBLISH_DATE_PERCENTAGE, CUM_VACCINATION_THIRD_INJECTION_UPTAKE_BY_VACCINATION_DATE_PERCENTAGE,
                CUM_VACCINES_GIVEN_BY_PUBLISH_DATE, CUM_VIRUS_TESTS_BY_PUBLISH_DATE, CUM_VIRUS_TESTS_BY_SPECIMEN_DATE, CUM_WEEKLY_NSO_DEATHS_BY_REG_DATE,
                CUM_WEEKLY_NSO_DEATHS_BY_REG_DATE_RATE, FEMALE_CASES, FEMALE_DEATHS_28DAYS, HOSPITAL_CASES, MALE_CASES, MALE_DEATHS_28DAYS, NEW_ADMISSIONS);
    }
}
